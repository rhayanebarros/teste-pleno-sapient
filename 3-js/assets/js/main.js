(()=>{"use strict";var e,t,o,n,r,i,l,c={285:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.api=function(){var e=document.querySelector(".extract");fetch("https://en.wikipedia.org/w/api.php?format=json&action=query&prop=extracts&exintro&explaintext&redirects=1&titles=Alber%20Einstein&origin=*").then((function(e){return e.json()})).then((function(t){var o=t.query.pages[736].extract;e.innerHTML=""+o})).catch((function(e){console.log(e)}))}},838:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.carousel=function(){document.querySelector(".carousel-slider").style.overflow="hidden";var e={primeiraImg:function(){var e=document.querySelector(".carousel-slider .item:first-child");e.classList.add("ativo"),e.style.display="inline-block"},slide:function(){var t=document.querySelector(".ativo");t.nextElementSibling?(t.nextElementSibling.classList.add("ativo"),t.nextElementSibling.style.display="inline-block",t.classList.remove("ativo"),t.style.display="none"):(t.classList.remove("ativo"),t.style.display="none",e.primeiraImg())}};e.primeiraImg(),setInterval(e.slide,4e3)}},837:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.modal=function(){var e=document.querySelector(".modal-wiki"),t=document.querySelector(".button-modal"),o=document.querySelector(".close-modal"),n=document.querySelector("body");function r(){e.classList.toggle("-active"),n.classList.toggle("-overlay")}t.addEventListener("click",r),o.addEventListener("click",r)}},406:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.openMenu=function(){document.getElementById("menu-button").addEventListener("click",(function(e){e.target.nextElementSibling.classList.toggle("-active")}))}},453:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.scrollTop=function(){var e=document.querySelector(".wrapper"),t=document.querySelector(".content");document.querySelector(".button-modal").addEventListener("click",(function(){var o,n,r,i,l,c,a,s,u;o=e,n=function(e){var t=e.parentNode.getBoundingClientRect(),o=e.getBoundingClientRect(),n={};return n.top=o.top-t.top+e.parentNode.scrollTop,n.right=o.right-t.right,n.bottom=o.bottom-t.bottom,n.left=o.left-t.left,n}(t),r=o,i=n.top,l=r.scrollTop,c=i-l,a=performance.now(),s=void 0,u=void 0,function e(){s=performance.now(),u=(s-a)/1e3/2,r.scrollTop=l+c*function(e){return e<.5?2*e*e:(4-2*e)*e-1}(u),u<1&&window.requestAnimationFrame(e)}()}))}},700:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.toggleList=function(){document.querySelectorAll(".accordion .item").forEach((function(e){return e.addEventListener("click",(function(e){e.target.parentElement.classList.toggle("-active")}))}))}},170:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.video=function(){document.querySelector(".video").addEventListener("click",(function(e){e.target.offsetParent.firstElementChild.classList.toggle("-inactive")}))}}},a={};function s(e){if(a[e])return a[e].exports;var t=a[e]={exports:{}};return c[e](t,t.exports,s),t.exports}e=s(406),t=s(700),o=s(285),n=s(837),r=s(170),i=s(453),l=s(838),(0,e.openMenu)(),(0,t.toggleList)(),(0,o.api)(),(0,n.modal)(),(0,r.video)(),(0,i.scrollTop)(),(0,l.carousel)()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8zLWpzLy4vc3JjL2pzL2FwcC9tYWluLmpzIiwid2VicGFjazovLzMtanMvLi9zcmMvanMvY29tcG9uZW50cy9hcGkuanMiLCJ3ZWJwYWNrOi8vMy1qcy8uL3NyYy9qcy9jb21wb25lbnRzL2Nhcm91c2VsLmpzIiwid2VicGFjazovLzMtanMvLi9zcmMvanMvY29tcG9uZW50cy9tb2RhbC5qcyIsIndlYnBhY2s6Ly8zLWpzLy4vc3JjL2pzL2NvbXBvbmVudHMvb3Blbk1lbnUuanMiLCJ3ZWJwYWNrOi8vMy1qcy8uL3NyYy9qcy9jb21wb25lbnRzL3Njcm9sbFRvcC5qcyIsIndlYnBhY2s6Ly8zLWpzLy4vc3JjL2pzL2NvbXBvbmVudHMvdG9nZ2xlTGlzdC5qcyIsIndlYnBhY2s6Ly8zLWpzLy4vc3JjL2pzL2NvbXBvbmVudHMvdmlkZW8uanMiLCJ3ZWJwYWNrOi8vMy1qcy93ZWJwYWNrL2Jvb3RzdHJhcCJdLCJuYW1lcyI6WyJ1bDIiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJmZXRjaCIsInRoZW4iLCJyZXNwIiwianNvbiIsImRhdGEiLCJwYWdlIiwicXVlcnkiLCJwYWdlcyIsImV4dHJhY3QiLCJpbm5lckhUTUwiLCJjYXRjaCIsImVycm9yIiwiY29uc29sZSIsImxvZyIsInN0eWxlIiwib3ZlcmZsb3ciLCJzZXR0aW5ncyIsInByaW1laXJhSW1nIiwiZWxlbWVudG8iLCJjbGFzc0xpc3QiLCJhZGQiLCJkaXNwbGF5Iiwic2xpZGUiLCJuZXh0RWxlbWVudFNpYmxpbmciLCJyZW1vdmUiLCJzZXRJbnRlcnZhbCIsIm1vZGFsIiwidHJpZ2dlciIsImNsb3NlQnV0dG9uIiwib3ZlcmxheUJvZHkiLCJ0b2dnbGVNb2RhbCIsInRvZ2dsZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJnZXRFbGVtZW50QnlJZCIsImV2ZW50IiwidGFyZ2V0IiwiYm94IiwidGFyZ2V0RWxtIiwiY29udGFpbmVyIiwicG9zIiwiZWxlbWVudCIsInRvIiwic3RhcnQiLCJjaGFuZ2UiLCJzdGFydFRpbWUiLCJub3ciLCJ0IiwiZWxtIiwicFBvcyIsInBhcmVudE5vZGUiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJjUG9zIiwidG9wIiwic2Nyb2xsVG9wIiwicmlnaHQiLCJib3R0b20iLCJsZWZ0IiwiZ2V0UmVsYXRpdmVQb3MiLCJwZXJmb3JtYW5jZSIsImFuaW1hdGVTY3JvbGwiLCJlYXNlSW5PdXRRdWFkIiwid2luZG93IiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJpdGVtIiwicGFyZW50RWxlbWVudCIsIm9mZnNldFBhcmVudCIsImZpcnN0RWxlbWVudENoaWxkIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJvcGVuTWVudSIsInRvZ2dsZUxpc3QiLCJhcGkiLCJ2aWRlbyIsImNhcm91c2VsIl0sIm1hcHBpbmdzIjoidUJBQUEsRUFDQSxFQUNBLEVBQ0EsRUFDQSxFQUNBLEVBQ0EsRSxzRUNOQSxXQUNFLElBQU1BLEVBQU1DLFNBQVNDLGNBQWMsWUFHbkNDLE1BRlksOElBR1hDLE1BQUssU0FBQ0MsR0FBRCxPQUFVQSxFQUFLQyxNQUFmLElBQ0xGLE1BQUssU0FBU0csR0FDYixJQUFJQyxFQUFPRCxFQUFLRSxNQUFNQyxNQUFNLEtBQUtDLFFBQ2pDWCxFQUFJWSxVQUFKLEdBQW1CSixDQUNwQixJQUNBSyxPQUFNLFNBQVNDLEdBQ2RDLFFBQVFDLElBQUlGLEVBQ2IsR0FDRixDLDBFQ2JELFdBQ2lCYixTQUFTQyxjQUFjLG9CQUMvQmUsTUFBTUMsU0FBVyxTQUV0QixJQUFJQyxFQUFXLENBQ2JDLFlBQWEsV0FDWCxJQUFNQyxFQUFXcEIsU0FBU0MsY0FBYyxzQ0FDeENtQixFQUFTQyxVQUFVQyxJQUFJLFNBQ3ZCRixFQUFTSixNQUFNTyxRQUFVLGNBQzFCLEVBRURD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QUUsRUFBb0JILEdBQVVFLEVBQVFBLEVBQU9ELFFBQVNGLEdBRy9DRyxFQUFPRCxPQUNmLENSckJBLFNBQ0EsU0FDQSxTQUNBLFNBQ0EsU0FDQSxTQUNBLFVBRUEsSUFBQUcsYUFDQSxJQUFBQyxlQUNBLElBQUFDLFFBQ0EsSUFBQW5ELFVBQ0EsSUFBQW9ELFVBQ0EsSUFBQXpCLGNBQ0EsSUFBQTBCLFciLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG9wZW5NZW51IH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvb3Blbk1lbnVcIjtcclxuaW1wb3J0IHsgdG9nZ2xlTGlzdCB9IGZyb20gXCIuLi9jb21wb25lbnRzL3RvZ2dsZUxpc3RcIjtcclxuaW1wb3J0IHsgYXBpIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvYXBpXCI7XHJcbmltcG9ydCB7IG1vZGFsIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvbW9kYWxcIjtcclxuaW1wb3J0IHsgdmlkZW8gfSBmcm9tIFwiLi4vY29tcG9uZW50cy92aWRlb1wiO1xyXG5pbXBvcnQgeyBzY3JvbGxUb3AgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9zY3JvbGxUb3BcIjtcclxuaW1wb3J0IHsgY2Fyb3VzZWwgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9jYXJvdXNlbFwiO1xyXG5cclxub3Blbk1lbnUoKTtcclxudG9nZ2xlTGlzdCgpO1xyXG5hcGkoKTtcclxubW9kYWwoKTtcclxudmlkZW8oKTtcclxuc2Nyb2xsVG9wKCk7XHJcbmNhcm91c2VsKCk7IiwiZnVuY3Rpb24gYXBpKCkge1xyXG4gIGNvbnN0IHVsMiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5leHRyYWN0Jyk7XHJcbiAgY29uc3QgdXJsID0gJ2h0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93L2FwaS5waHA/Zm9ybWF0PWpzb24mYWN0aW9uPXF1ZXJ5JnByb3A9ZXh0cmFjdHMmZXhpbnRybyZleHBsYWludGV4dCZyZWRpcmVjdHM9MSZ0aXRsZXM9QWxiZXIlMjBFaW5zdGVpbiZvcmlnaW49Kic7XHJcblxyXG4gIGZldGNoKHVybClcclxuICAudGhlbigocmVzcCkgPT4gcmVzcC5qc29uKCkpXHJcbiAgLnRoZW4oZnVuY3Rpb24oZGF0YSkge1xyXG4gICAgbGV0IHBhZ2UgPSBkYXRhLnF1ZXJ5LnBhZ2VzWzczNl0uZXh0cmFjdDtcclxuICAgIHVsMi5pbm5lckhUTUwgPSBgJHtwYWdlfWA7XHJcbiAgfSlcclxuICAuY2F0Y2goZnVuY3Rpb24oZXJyb3IpIHtcclxuICAgIGNvbnNvbGUubG9nKGVycm9yKTtcclxuICB9KTtcclxufVxyXG5leHBvcnQgeyBhcGkgfTsiLCJmdW5jdGlvbiBjYXJvdXNlbCgpIHtcclxuXHRcdGNvbnN0IHNsaWRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2Fyb3VzZWwtc2xpZGVyXCIpO1xyXG5cdFx0c2xpZGVyLnN0eWxlLm92ZXJmbG93ID0gJ2hpZGRlbic7XHJcblxyXG4gICAgdmFyIHNldHRpbmdzID0ge1xyXG4gICAgICBwcmltZWlyYUltZzogZnVuY3Rpb24oKXtcclxuICAgICAgICBjb25zdCBlbGVtZW50byA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2Fyb3VzZWwtc2xpZGVyIC5pdGVtOmZpcnN0LWNoaWxkXCIpO1xyXG4gICAgICAgIGVsZW1lbnRvLmNsYXNzTGlzdC5hZGQoXCJhdGl2b1wiKTtcclxuICAgICAgICBlbGVtZW50by5zdHlsZS5kaXNwbGF5ID0gJ2lubGluZS1ibG9jayc7XHJcbiAgICAgIH0sXHJcblxyXG4gICAgICBzbGlkZTogZnVuY3Rpb24oKXtcclxuICAgICAgICBjb25zdCBlbGVtZW50byA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYXRpdm9cIik7XHJcblxyXG4gICAgICAgIGlmKGVsZW1lbnRvLm5leHRFbGVtZW50U2libGluZyl7XHJcbiAgICAgICAgICBlbGVtZW50by5uZXh0RWxlbWVudFNpYmxpbmcuY2xhc3NMaXN0LmFkZChcImF0aXZvXCIpO1xyXG4gICAgICAgICAgZWxlbWVudG8ubmV4dEVsZW1lbnRTaWJsaW5nLnN0eWxlLmRpc3BsYXkgPSAnaW5saW5lLWJsb2NrJztcclxuICAgICAgICAgIGVsZW1lbnRvLmNsYXNzTGlzdC5yZW1vdmUoXCJhdGl2b1wiKTtcclxuICAgICAgICAgIGVsZW1lbnRvLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICBlbGVtZW50by5jbGFzc0xpc3QucmVtb3ZlKFwiYXRpdm9cIik7XHJcbiAgICAgICAgICBlbGVtZW50by5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgICAgc2V0dGluZ3MucHJpbWVpcmFJbWcoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy9jaGFtYSBvIHNsaWRlXHJcbiAgICBzZXR0aW5ncy5wcmltZWlyYUltZygpO1xyXG4gICAgc2V0SW50ZXJ2YWwoc2V0dGluZ3Muc2xpZGUsNDAwMCk7XHJcbn1cclxuZXhwb3J0IHsgY2Fyb3VzZWwgfTsiLCJmdW5jdGlvbiBtb2RhbCgpIHtcclxuICBjb25zdCBtb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWwtd2lraVwiKTtcclxuICBjb25zdCB0cmlnZ2VyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5idXR0b24tbW9kYWxcIik7XHJcbiAgY29uc3QgY2xvc2VCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNsb3NlLW1vZGFsXCIpO1xyXG4gIGNvbnN0IG92ZXJsYXlCb2R5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImJvZHlcIik7XHJcblxyXG4gIGZ1bmN0aW9uIHRvZ2dsZU1vZGFsKCkge1xyXG4gICAgbW9kYWwuY2xhc3NMaXN0LnRvZ2dsZShcIi1hY3RpdmVcIik7XHJcbiAgICBvdmVybGF5Qm9keS5jbGFzc0xpc3QudG9nZ2xlKFwiLW92ZXJsYXlcIik7XHJcbiAgfVxyXG5cclxuICB0cmlnZ2VyLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0b2dnbGVNb2RhbCk7XHJcbiAgY2xvc2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRvZ2dsZU1vZGFsKTsgIFxyXG59XHJcbmV4cG9ydCB7IG1vZGFsIH07IiwiZnVuY3Rpb24gb3Blbk1lbnUoKSB7XHJcbiAgY29uc3QgbWVudUJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtZW51LWJ1dHRvbicpO1xyXG4gIG1lbnVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiBoYW5kbGVDbGljayhldmVudCkge1xyXG4gICAgZXZlbnQudGFyZ2V0Lm5leHRFbGVtZW50U2libGluZy5jbGFzc0xpc3QudG9nZ2xlKCctYWN0aXZlJyk7XHJcbiAgfSk7XHJcbn1cclxuZXhwb3J0IHsgb3Blbk1lbnUgfTsiLCJmdW5jdGlvbiBzY3JvbGxUb3AoKSB7XHJcbiAgY29uc3QgYm94ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLndyYXBwZXInKSxcclxuICB0YXJnZXRFbG0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29udGVudCcpO1xyXG5cclxuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYnV0dG9uLW1vZGFsJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbigpe1xyXG4gICAgc2Nyb2xsVG9FbG0oIGJveCwgdGFyZ2V0RWxtICwgNjAwICk7ICAgXHJcbiAgfSk7XHJcblxyXG4gIGZ1bmN0aW9uIHNjcm9sbFRvRWxtKGNvbnRhaW5lciwgZWxtLCBkdXJhdGlvbil7XHJcbiAgICBjb25zdCBwb3MgPSBnZXRSZWxhdGl2ZVBvcyhlbG0pO1xyXG4gICAgc2Nyb2xsVG8oIGNvbnRhaW5lciwgcG9zLnRvcCAsIDIpO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gZ2V0UmVsYXRpdmVQb3MoZWxtKXtcclxuICAgIGxldCBwUG9zID0gZWxtLnBhcmVudE5vZGUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbiAgICBsZXQgY1BvcyA9IGVsbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICAgIGxldCBwb3MgPSB7fTtcclxuXHJcbiAgICBwb3MudG9wID0gY1Bvcy50b3AgLSBwUG9zLnRvcCArIGVsbS5wYXJlbnROb2RlLnNjcm9sbFRvcCxcclxuICAgIHBvcy5yaWdodCA9IGNQb3MucmlnaHQgLSBwUG9zLnJpZ2h0LFxyXG4gICAgcG9zLmJvdHRvbSA9IGNQb3MuYm90dG9tIC0gcFBvcy5ib3R0b20sXHJcbiAgICBwb3MubGVmdCA9IGNQb3MubGVmdCAtIHBQb3MubGVmdDtcclxuXHJcbiAgICByZXR1cm4gcG9zO1xyXG4gIH1cclxuICAgIFxyXG4gIGZ1bmN0aW9uIHNjcm9sbFRvKGVsZW1lbnQsIHRvLCBkdXJhdGlvbiwgb25Eb25lKSB7XHJcbiAgICBsZXQgc3RhcnQgPSBlbGVtZW50LnNjcm9sbFRvcCxcclxuICAgICAgICBjaGFuZ2UgPSB0byAtIHN0YXJ0LFxyXG4gICAgICAgIHN0YXJ0VGltZSA9IHBlcmZvcm1hbmNlLm5vdygpLFxyXG4gICAgICAgIHZhbCwgbm93LCBlbGFwc2VkLCB0O1xyXG5cclxuICAgIGZ1bmN0aW9uIGFuaW1hdGVTY3JvbGwoKXtcclxuICAgICAgbm93ID0gcGVyZm9ybWFuY2Uubm93KCk7XHJcbiAgICAgIGVsYXBzZWQgPSAobm93IC0gc3RhcnRUaW1lKS8xMDAwO1xyXG4gICAgICB0ID0gKGVsYXBzZWQvZHVyYXRpb24pO1xyXG5cclxuICAgICAgZWxlbWVudC5zY3JvbGxUb3AgPSBzdGFydCArIGNoYW5nZSAqIGVhc2VJbk91dFF1YWQodCk7XHJcblxyXG4gICAgICBpZiggdCA8IDEgKVxyXG4gICAgICAgIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoYW5pbWF0ZVNjcm9sbCk7XHJcbiAgICAgIGVsc2VcclxuICAgICAgICBvbkRvbmUgJiYgb25Eb25lKCk7XHJcbiAgICB9O1xyXG5cclxuICAgIGFuaW1hdGVTY3JvbGwoKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGVhc2VJbk91dFF1YWQodCl7IHJldHVybiB0PC41ID8gMip0KnQgOiAtMSsoNC0yKnQpKnQgfTtcclxuICBcclxufVxyXG5leHBvcnQgeyBzY3JvbGxUb3AgfTsiLCJmdW5jdGlvbiB0b2dnbGVMaXN0KCkge1xyXG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5hY2NvcmRpb24gLml0ZW0nKVxyXG4gICAgLmZvckVhY2goaXRlbSA9PiBpdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oZXZlbnQpIHtcclxuICAgICAgZXZlbnQudGFyZ2V0LnBhcmVudEVsZW1lbnQuY2xhc3NMaXN0LnRvZ2dsZSgnLWFjdGl2ZScpO1xyXG4gICAgfSkpO1xyXG59XHJcbmV4cG9ydCB7IHRvZ2dsZUxpc3QgfTsiLCJmdW5jdGlvbiB2aWRlbygpIHtcclxuICBjb25zdCB2aWRlb0J1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy52aWRlbycpO1xyXG4gIHZpZGVvQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gaGFuZGxlQ2xpY2soZXZlbnQpIHtcclxuICAgIGV2ZW50LnRhcmdldC5vZmZzZXRQYXJlbnQuZmlyc3RFbGVtZW50Q2hpbGQuY2xhc3NMaXN0LnRvZ2dsZSgnLWluYWN0aXZlJyk7XHJcbiAgfSk7XHJcbn1cclxuZXhwb3J0IHsgdmlkZW8gfTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHRpZihfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdKSB7XG5cdFx0cmV0dXJuIF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0uZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiJdLCJzb3VyY2VSb290IjoiIn0=