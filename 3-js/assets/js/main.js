(()=>{"use strict";var e,t,n,o,r={285:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.api=function(){var e=document.querySelector(".extract");fetch("https://en.wikipedia.org/w/api.php?format=json&action=query&prop=extracts&exintro&explaintext&redirects=1&titles=Alber%20Einstein&origin=*").then((function(e){return e.json()})).then((function(t){var n=t.query.pages[736].extract;e.innerHTML=""+n})).catch((function(e){console.log(e)}))}},837:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.modal=function(){var e=document.querySelector(".modal-wiki"),t=document.querySelector(".button-modal"),n=document.querySelector(".close-modal"),o=document.querySelector("body");function r(){e.classList.toggle("-active"),o.classList.toggle("-overlay")}t.addEventListener("click",r),n.addEventListener("click",r)}},406:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.openMenu=function(){document.getElementById("menu-button").addEventListener("click",(function(e){e.target.nextElementSibling.classList.toggle("-active")}))}},700:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.toggleList=function(){document.querySelectorAll(".item").forEach((function(e){return e.addEventListener("click",(function(e){e.target.parentElement.classList.toggle("-active")}))}))}}},c={};function i(e){if(c[e])return c[e].exports;var t=c[e]={exports:{}};return r[e](t,t.exports,i),t.exports}e=i(406),t=i(700),n=i(285),o=i(837),(0,e.openMenu)(),(0,t.toggleList)(),(0,n.api)(),(0,o.modal)()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8zLWpzLy4vc3JjL2pzL2FwcC9tYWluLmpzIiwid2VicGFjazovLzMtanMvLi9zcmMvanMvY29tcG9uZW50cy9hcGkuanMiLCJ3ZWJwYWNrOi8vMy1qcy8uL3NyYy9qcy9jb21wb25lbnRzL21vZGFsLmpzIiwid2VicGFjazovLzMtanMvLi9zcmMvanMvY29tcG9uZW50cy9vcGVuTWVudS5qcyIsIndlYnBhY2s6Ly8zLWpzLy4vc3JjL2pzL2NvbXBvbmVudHMvdG9nZ2xlTGlzdC5qcyIsIndlYnBhY2s6Ly8zLWpzL3dlYnBhY2svYm9vdHN0cmFwIl0sIm5hbWVzIjpbInVsMiIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImZldGNoIiwidGhlbiIsInJlc3AiLCJqc29uIiwiZGF0YSIsInBhZ2UiLCJxdWVyeSIsInBhZ2VzIiwiZXh0cmFjdCIsImlubmVySFRNTCIsImNhdGNoIiwiZXJyb3IiLCJjb25zb2xlIiwibG9nIiwibW9kYWwiLCJ0cmlnZ2VyIiwiY2xvc2VCdXR0b24iLCJvdmVybGF5Qm9keSIsInRvZ2dsZU1vZGFsIiwiY2xhc3NMaXN0IiwidG9nZ2xlIiwiYWRkRXZlbnRMaXN0ZW5lciIsImdldEVsZW1lbnRCeUlkIiwiZXZlbnQiLCJ0YXJnZXQiLCJuZXh0RWxlbWVudFNpYmxpbmciLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9yRWFjaCIsIml0ZW0iLCJwYXJlbnRFbGVtZW50IiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJvcGVuTWVudSIsInRvZ2dsZUxpc3QiLCJhcGkiXSwibWFwcGluZ3MiOiJ1QkFBQSxFQUNBLEVBQ0EsRUFDQSxFLHNFQ0hBLFdBQ0UsSUFBTUEsRUFBTUMsU0FBU0MsY0FBYyxZQUduQ0MsTUFGWSw4SUFHWEMsTUFBSyxTQUFDQyxHQUFELE9BQVVBLEVBQUtDLE1BQWYsSUFDTEYsTUFBSyxTQUFTRyxHQUNiLElBQUlDLEVBQU9ELEVBQUtFLE1BQU1DLE1BQU0sS0FBS0MsUUFDakNYLEVBQUlZLFVBQUosR0FBbUJKLENBQ3BCLElBQ0FLLE9BQU0sU0FBU0MsR0FDZEMsUUFBUUMsSUFBSUYsRUFDYixHQUNGLEMsdUVDYkQsV0FDRSxJQUFJRyxFQUFRaEIsU0FBU0MsY0FBYyxlQUMvQmdCLEVBQVVqQixTQUFTQyxjQUFjLGlCQUNqQ2lCLEVBQWNsQixTQUFTQyxjQUFjLGdCQUNyQ2tCLEVBQWNuQixTQUFTQyxjQUFjLFFBRXpDLFNBQVNtQixJQUNQSixFQUFNSyxVQUFVQyxPQUFPLFdBQ3ZCSCxFQUFZRSxVQUFVQyxPQUFPLFdBQzlCLENBRURMLEVBQVFNLGlCQUFpQixRQUFTSCxHQUNsQ0YsRUFBWUssaUJBQWlCLFFBQVNILEVBQ3ZDLEMsMEVDYkQsV0FDcUJwQixTQUFTd0IsZUFBZSxlQUNoQ0QsaUJBQWlCLFNBQVMsU0FBcUJFLEdBQ3hEQSxFQUFNQyxPQUFPQyxtQkFBbUJOLFVBQVVDLE9BQU8sVUFDbEQsR0FDRixDLDRFQ0xELFdBQ0V0QixTQUFTNEIsaUJBQWlCLFNBQ3ZCQyxTQUFRLFNBQUFDLEdBQUEsT0FBUUEsRUFBS1AsaUJBQWlCLFNBQVMsU0FBU0UsR0FDdkRBLEVBQU1DLE9BQU9LLGNBQWNWLFVBQVVDLE9BQU8sVUFDN0MsR0FGUSxHQUdaLEMsR0NKR1UsRUFBMkIsQ0FBQyxFQUdoQyxTQUFTQyxFQUFvQkMsR0FFNUIsR0FBR0YsRUFBeUJFLEdBQzNCLE9BQU9GLEVBQXlCRSxHQUFVQyxRQUczQyxJQUFJQyxFQUFTSixFQUF5QkUsR0FBWSxDQUdqREMsUUFBUyxDQUFDLEdBT1gsT0FIQUUsRUFBb0JILEdBQVVFLEVBQVFBLEVBQU9ELFFBQVNGLEdBRy9DRyxFQUFPRCxPQUNmLENMckJBLFNBQ0EsU0FDQSxTQUNBLFVBRUEsSUFBQUcsYUFDQSxJQUFBQyxlQUNBLElBQUFDLFFBQ0EsSUFBQXhCLFEiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG9wZW5NZW51IH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvb3Blbk1lbnVcIjtcclxuaW1wb3J0IHsgdG9nZ2xlTGlzdCB9IGZyb20gXCIuLi9jb21wb25lbnRzL3RvZ2dsZUxpc3RcIjtcclxuaW1wb3J0IHsgYXBpIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvYXBpXCI7XHJcbmltcG9ydCB7IG1vZGFsIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvbW9kYWxcIjtcclxuXHJcbm9wZW5NZW51KCk7XHJcbnRvZ2dsZUxpc3QoKTtcclxuYXBpKCk7XHJcbm1vZGFsKCk7IiwiZnVuY3Rpb24gYXBpKCkge1xyXG4gIGNvbnN0IHVsMiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5leHRyYWN0Jyk7XHJcbiAgY29uc3QgdXJsID0gJ2h0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93L2FwaS5waHA/Zm9ybWF0PWpzb24mYWN0aW9uPXF1ZXJ5JnByb3A9ZXh0cmFjdHMmZXhpbnRybyZleHBsYWludGV4dCZyZWRpcmVjdHM9MSZ0aXRsZXM9QWxiZXIlMjBFaW5zdGVpbiZvcmlnaW49Kic7XHJcblxyXG4gIGZldGNoKHVybClcclxuICAudGhlbigocmVzcCkgPT4gcmVzcC5qc29uKCkpXHJcbiAgLnRoZW4oZnVuY3Rpb24oZGF0YSkge1xyXG4gICAgbGV0IHBhZ2UgPSBkYXRhLnF1ZXJ5LnBhZ2VzWzczNl0uZXh0cmFjdDtcclxuICAgIHVsMi5pbm5lckhUTUwgPSBgJHtwYWdlfWA7XHJcbiAgfSlcclxuICAuY2F0Y2goZnVuY3Rpb24oZXJyb3IpIHtcclxuICAgIGNvbnNvbGUubG9nKGVycm9yKTtcclxuICB9KTtcclxufVxyXG5leHBvcnQgeyBhcGkgfTsiLCJmdW5jdGlvbiBtb2RhbCgpIHtcclxuICB2YXIgbW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsLXdpa2lcIik7XHJcbiAgdmFyIHRyaWdnZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmJ1dHRvbi1tb2RhbFwiKTtcclxuICB2YXIgY2xvc2VCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNsb3NlLW1vZGFsXCIpO1xyXG4gIHZhciBvdmVybGF5Qm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJib2R5XCIpO1xyXG5cclxuICBmdW5jdGlvbiB0b2dnbGVNb2RhbCgpIHtcclxuICAgIG1vZGFsLmNsYXNzTGlzdC50b2dnbGUoXCItYWN0aXZlXCIpO1xyXG4gICAgb3ZlcmxheUJvZHkuY2xhc3NMaXN0LnRvZ2dsZShcIi1vdmVybGF5XCIpO1xyXG4gIH1cclxuXHJcbiAgdHJpZ2dlci5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdG9nZ2xlTW9kYWwpO1xyXG4gIGNsb3NlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0b2dnbGVNb2RhbCk7XHJcbn1cclxuZXhwb3J0IHsgbW9kYWwgfTsiLCJmdW5jdGlvbiBvcGVuTWVudSgpIHtcclxuICBjb25zdCBtZW51QnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21lbnUtYnV0dG9uJyk7XHJcbiAgbWVudUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIGhhbmRsZUNsaWNrKGV2ZW50KSB7XHJcbiAgICBldmVudC50YXJnZXQubmV4dEVsZW1lbnRTaWJsaW5nLmNsYXNzTGlzdC50b2dnbGUoJy1hY3RpdmUnKTtcclxuICB9KTtcclxufVxyXG5leHBvcnQgeyBvcGVuTWVudSB9OyIsImZ1bmN0aW9uIHRvZ2dsZUxpc3QoKSB7XHJcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLml0ZW0nKVxyXG4gICAgLmZvckVhY2goaXRlbSA9PiBpdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oZXZlbnQpIHtcclxuICAgICAgZXZlbnQudGFyZ2V0LnBhcmVudEVsZW1lbnQuY2xhc3NMaXN0LnRvZ2dsZSgnLWFjdGl2ZScpO1xyXG4gICAgfSkpO1xyXG59XHJcbmV4cG9ydCB7IHRvZ2dsZUxpc3QgfTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHRpZihfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdKSB7XG5cdFx0cmV0dXJuIF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0uZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiJdLCJzb3VyY2VSb290IjoiIn0=